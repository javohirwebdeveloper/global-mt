{
  "version": 1,
  "components": {
    "@mui/material#Card": {
      "id": "@mui/material#Card",
      "name": "Card",
      "props": {
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "noLinkStyle": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "prefetch": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "href": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "data-mui-color-scheme": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "role": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "key": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Card"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Stack": {
      "id": "@mui/material#Stack",
      "name": "Stack",
      "props": {
        "spacing": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "direction": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "useFlexGap": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "noValidate": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "autoComplete": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "alignItems": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "className": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "key": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Stack"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Typography": {
      "id": "@mui/material#Typography",
      "name": "Typography",
      "props": {
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "className": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "align": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Typography"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Chip": {
      "id": "@mui/material#Chip",
      "name": "Chip",
      "props": {
        "key": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "label": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "size": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "color": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "clickable": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "role": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "rel": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "data-ga-event-category": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "data-ga-event-action": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "data-ga-event-split": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "href": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "data-ga-event-label": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "onDelete": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "onClick": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "avatar": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "icon": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Chip"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/ClickAwayListener#ClickAwayListener": {
      "id": "@mui/material/ClickAwayListener#ClickAwayListener",
      "name": "ClickAwayListener",
      "props": {
        "onClickAway": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "mouseEvent": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "touchEvent": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/ClickAwayListener",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/NoSsr#NoSsr": {
      "id": "@mui/material/NoSsr#NoSsr",
      "name": "NoSsr",
      "props": {
        "defer": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/NoSsr",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Portal#Portal": {
      "id": "@mui/material/Portal#Portal",
      "name": "Portal",
      "props": {},
      "export": {
        "path": "@mui/material/Portal",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/TextareaAutosize#TextareaAutosize": {
      "id": "@mui/material/TextareaAutosize#TextareaAutosize",
      "name": "TextareaAutosize",
      "props": {
        "aria-label": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "minRows": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "placeholder": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "maxRows": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "defaultValue": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/TextareaAutosize",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Accordion": {
      "id": "@mui/material#Accordion",
      "name": "Accordion",
      "props": {
        "TransitionComponent": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "elevation": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "defaultExpanded": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disableGutters": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disabled": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "expanded": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "onChange": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Accordion"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#AccordionDetails": {
      "id": "@mui/material#AccordionDetails",
      "name": "AccordionDetails",
      "props": {},
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "AccordionDetails"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#AccordionSummary": {
      "id": "@mui/material#AccordionSummary",
      "name": "AccordionSummary",
      "props": {
        "aria-controls": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "id": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "disabled": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "AccordionSummary"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Autocomplete": {
      "id": "@mui/material#Autocomplete",
      "name": "Autocomplete",
      "props": {
        "PaperComponent": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "PopperComponent": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "ListboxComponent": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "options": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "value": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "id": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "size": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "defaultValue": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "disableClearable": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "multiple": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "open": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "ref": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "disableListWrap": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "filterSelectedOptions": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "freeSolo": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "readOnly": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disableCloseOnSelect": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "clearOnEscape": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "includeInputInList": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "autoComplete": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "openOnFocus": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "autoHighlight": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "autoSelect": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disabled": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disablePortal": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "blurOnSelect": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "clearOnBlur": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "selectOnFocus": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "limitTags": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "noOptionsText": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "handleHomeEndKeys": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "filterOptions": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "inputValue": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "loading": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "className": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Autocomplete"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Avatar": {
      "id": "@mui/material#Avatar",
      "name": "Avatar",
      "props": {
        "alt": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "src": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "srcSet": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "aria-label": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "sizes": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Avatar"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#AvatarGroup": {
      "id": "@mui/material#AvatarGroup",
      "name": "AvatarGroup",
      "props": {
        "ref": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "total": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "max": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "AvatarGroup"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Badge": {
      "id": "@mui/material#Badge",
      "name": "Badge",
      "props": {
        "color": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "showZero": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "badgeContent": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "invisible": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "overlap": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "max": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Badge"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Box": {
      "id": "@mui/material#Box",
      "name": "Box",
      "props": {},
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Box"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Button": {
      "id": "@mui/material#Button",
      "name": "Button",
      "props": {
        "id": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "aria-haspopup": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "onClick": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "size": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "color": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "noLinkStyle": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "href": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "to": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Button"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#CardActions": {
      "id": "@mui/material#CardActions",
      "name": "CardActions",
      "props": {
        "disableSpacing": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "CardActions"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Container#Container": {
      "id": "@mui/material/Container#Container",
      "name": "Container",
      "props": {
        "maxWidth": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/Container",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Divider": {
      "id": "@mui/material#Divider",
      "name": "Divider",
      "props": {
        "className": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "light": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "orientation": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "key": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "flexItem": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "textAlign": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Divider"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#FormControl": {
      "id": "@mui/material#FormControl",
      "name": "FormControl",
      "props": {
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "size": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "fullWidth": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disabled": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "error": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "required": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "FormControl"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Grid": {
      "id": "@mui/material#Grid",
      "name": "Grid",
      "props": {
        "flexWrap": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "wrap": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "container": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "justifyContent": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "item": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "xs": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "alignItems": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "direction": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "spacing": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "sm": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "key": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "md": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "ref": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "rowSpacing": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "columns": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "zeroMinWidth": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "lg": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "mt": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "xsOffset": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "mdOffset": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "columnSpacing": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "minHeight": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "display": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Grid"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#IconButton": {
      "id": "@mui/material#IconButton",
      "name": "IconButton",
      "props": {
        "className": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "size": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "color": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "href": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "target": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "rel": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "data-ga-event-category": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "data-ga-event-action": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "aria-label": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "title": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "ref": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "aria-haspopup": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "onClick": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "data-ga-event-label": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "aria-controls": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "edge": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "disabled": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "aria-hidden": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disableTouchRipple": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disableRipple": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "onMouseDown": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "type": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "id": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "key": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "IconButton"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Link": {
      "id": "@mui/material#Link",
      "name": "Link",
      "props": {
        "href": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "color": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "to": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Link"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Menu": {
      "id": "@mui/material#Menu",
      "name": "Menu",
      "props": {
        "id": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "anchorEl": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "open": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "onClose": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "transitionDuration": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "anchorReference": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "onClick": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "aria-labelledby": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "TransitionComponent": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "elevation": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "keepMounted": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Menu"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/MenuList#MenuList": {
      "id": "@mui/material/MenuList#MenuList",
      "name": "MenuList",
      "props": {
        "dense": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "ref": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "autoFocusItem": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "id": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "aria-labelledby": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "onKeyDown": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/MenuList",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Modal#Modal": {
      "id": "@mui/material/Modal#Modal",
      "name": "Modal",
      "props": {
        "aria-labelledby": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "aria-describedby": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "open": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "onClose": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "closeAfterTransition": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disablePortal": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disableEnforceFocus": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disableAutoFocus": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "keepMounted": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/Modal",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/SvgIcon#SvgIcon": {
      "id": "@mui/material/SvgIcon#SvgIcon",
      "name": "SvgIcon",
      "props": {},
      "export": {
        "path": "@mui/material/SvgIcon",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#AppBar": {
      "id": "@mui/material#AppBar",
      "name": "AppBar",
      "props": {
        "position": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "color": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "elevation": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "enableColorOnDark": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "AppBar"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#Backdrop": {
      "id": "@mui/material#Backdrop",
      "name": "Backdrop",
      "props": {
        "TransitionComponent": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "open": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "onClick": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "Backdrop"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#CardActionArea": {
      "id": "@mui/material#CardActionArea",
      "name": "CardActionArea",
      "props": {
        "component": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "href": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "CardActionArea"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/CssBaseline#CssBaseline": {
      "id": "@mui/material/CssBaseline#CssBaseline",
      "name": "CssBaseline",
      "props": {
        "enableColorScheme": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/CssBaseline",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Fade#Fade": {
      "id": "@mui/material/Fade#Fade",
      "name": "Fade",
      "props": {
        "in": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "timeout": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "unmountOnExit": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "appear": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/Fade",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/GlobalStyles#GlobalStyles": {
      "id": "@mui/material/GlobalStyles#GlobalStyles",
      "name": "GlobalStyles",
      "props": {},
      "export": {
        "path": "@mui/material/GlobalStyles",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Grow#Grow": {
      "id": "@mui/material/Grow#Grow",
      "name": "Grow",
      "props": {
        "in": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/Grow",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#MenuItem": {
      "id": "@mui/material#MenuItem",
      "name": "MenuItem",
      "props": {
        "onClick": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "className": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "value": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "key": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "selected": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "role": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "href": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "dense": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disabled": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disableRipple": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "data-ga-event-category": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "data-ga-event-action": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "data-ga-event-label": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "MenuItem"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Popper#Popper": {
      "id": "@mui/material/Popper#Popper",
      "name": "Popper",
      "props": {
        "id": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "anchorEl": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "open": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "placement": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "transition": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disablePortal": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "role": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/Popper",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Slide#Slide": {
      "id": "@mui/material/Slide#Slide",
      "name": "Slide",
      "props": {
        "timeout": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "direction": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "in": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "container": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "mountOnEnter": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "unmountOnExit": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "ref": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "appear": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/Slide",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#SpeedDial": {
      "id": "@mui/material#SpeedDial",
      "name": "SpeedDial",
      "props": {
        "TransitionComponent": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "TransitionProps": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "open": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "ref": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "ariaLabel": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "onClose": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "onOpen": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "SpeedDial"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#ThemeProvider": {
      "id": "@mui/material#ThemeProvider",
      "name": "ThemeProvider",
      "props": {
        "theme": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "ThemeProvider"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material#TextField": {
      "id": "@mui/material#TextField",
      "name": "TextField",
      "props": {
        "InputProps": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "inputProps": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "SelectProps": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "InputLabelProps": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "FormHelperTextProps": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "label": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "required": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "multiline": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "size": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "defaultValue": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "rows": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "hiddenLabel": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "id": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "placeholder": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "error": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "margin": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "name": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "fullWidth": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "value": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "onChange": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "type": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "autoComplete": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "helperText": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "select": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "maxRows": {
          "type": "number",
          "source": {
            "type": "code-usage"
          }
        },
        "disabled": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "color": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "focused": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "autoFocus": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "aria-label": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material",
        "locator": {
          "type": "named",
          "name": "TextField"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Zoom#Zoom": {
      "id": "@mui/material/Zoom#Zoom",
      "name": "Zoom",
      "props": {
        "in": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "key": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "timeout": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "unmountOnExit": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/Zoom",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/styles#StyledEngineProvider": {
      "id": "@mui/material/styles#StyledEngineProvider",
      "name": "StyledEngineProvider",
      "props": {
        "injectFirst": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/styles",
        "locator": {
          "type": "named",
          "name": "StyledEngineProvider"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/InitColorSchemeScript#MuiInitColorSchemeScript": {
      "id": "@mui/material/InitColorSchemeScript#MuiInitColorSchemeScript",
      "name": "MuiInitColorSchemeScript",
      "props": {
        "defaultMode": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/InitColorSchemeScript",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Link#MuiLink": {
      "id": "@mui/material/Link#MuiLink",
      "name": "MuiLink",
      "props": {
        "className": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "href": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "ref": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "component": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "color": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/Link",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material-nextjs/v14-pagesRouter#DocumentHeadTags": {
      "id": "@mui/material-nextjs/v14-pagesRouter#DocumentHeadTags",
      "name": "DocumentHeadTags",
      "props": {},
      "export": {
        "path": "@mui/material-nextjs/v14-pagesRouter",
        "locator": {
          "type": "named",
          "name": "DocumentHeadTags"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material-nextjs/v14-pagesRouter#AppCacheProvider": {
      "id": "@mui/material-nextjs/v14-pagesRouter#AppCacheProvider",
      "name": "AppCacheProvider",
      "props": {},
      "export": {
        "path": "@mui/material-nextjs/v14-pagesRouter",
        "locator": {
          "type": "named",
          "name": "AppCacheProvider"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/SwipeableDrawer#SwipeableDrawer": {
      "id": "@mui/material/SwipeableDrawer#SwipeableDrawer",
      "name": "SwipeableDrawer",
      "props": {
        "variant": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "open": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "onOpen": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "onClose": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "anchor": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        },
        "container": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "swipeAreaWidth": {
          "type": "any",
          "source": {
            "type": "code-usage"
          }
        },
        "disableSwipeToOpen": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/SwipeableDrawer",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Unstable_TrapFocus#TrapFocus": {
      "id": "@mui/material/Unstable_TrapFocus#TrapFocus",
      "name": "TrapFocus",
      "props": {
        "open": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disableAutoFocus": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        },
        "disableEnforceFocus": {
          "type": "boolean",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/Unstable_TrapFocus",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    },
    "@mui/material/Stack#Stackkk": {
      "id": "@mui/material/Stack#Stackkk",
      "name": "Stackkk",
      "props": {
        "flex": {
          "type": "string",
          "source": {
            "type": "code-usage"
          }
        }
      },
      "export": {
        "path": "@mui/material/Stack",
        "locator": {
          "type": "default"
        },
        "remote": true
      },
      "source": {
        "type": "code-usage"
      },
      "tags": [
        "external-lib"
      ]
    }
  },
  "instances": {
    "@mui/material#Card": [
      {
        "componentId": "@mui/material#Card",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/getting-started/templates/sign-up/SignUp.tsx",
          "start": {
            "line": 201,
            "index": 10
          },
          "end": {
            "line": 305,
            "index": 17
          }
        },
        "propsValues": {},
        "snippet": "<Card>\n            <SitemarkIcon />\n            <Typography\n              component=\"h1\"\n              variant=\"h4\"\n              sx={{ width: '100%', fontSize: 'clamp(2rem, 10vw, 2.15rem)' }}\n            >\n              Sign up\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={handleSubmit}\n              sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}\n            >\n              <FormControl>\n                <FormLabel htmlFor=\"name\">Full name</FormLabel>\n                <TextField\n                  autoComplete=\"name\"\n                  name=\"name\"\n                  required\n                  fullWidth\n                  id=\"name\"\n                  placeholder=\"Jon Snow\"\n                  error={nameError}\n                  helperText={nameErrorMessage}\n                  color={nameError ? 'error' : 'primary'}\n                />\n              </FormControl>\n              <FormControl>\n                <FormLabel htmlFor=\"email\">Email</FormLabel>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  placeholder=\"your@email.com\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  variant=\"outlined\"\n                  error={emailError}\n                  helperText={emailErrorMessage}\n                  color={passwordError ? 'error' : 'primary'}\n                />\n              </FormControl>\n              <FormControl>\n                <FormLabel htmlFor=\"password\">Password</FormLabel>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  placeholder=\"••••••\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                  variant=\"outlined\"\n                  error={passwordError}\n                  helperText={passwordErrorMessage}\n                  color={passwordError ? 'error' : 'primary'}\n                />\n              </FormControl>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive updates via email.\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                onClick={validateInputs}\n              >\n                Sign up\n              </Button>\n              <Link\n                href=\"/material-ui/getting-started/templates/sign-in/\"\n                variant=\"body2\"\n                sx={{ alignSelf: 'center' }}\n              >\n                Already have an account? Sign in\n              </Link>\n            </Box>\n            <Divider>\n              <Typography sx={{ color: 'text.secondary' }}>or</Typography>\n            </Divider>\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={() => alert('Sign up with Google')}\n                startIcon={<GoogleIcon />}\n              >\n                Sign up with Google\n              </Button>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={() => alert('Sign up with Facebook')}\n                startIcon={<FacebookIcon />}\n              >\n                Sign up with Facebook\n              </Button>\n            </Box>\n          </Card>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Stack": [
      {
        "componentId": "@mui/material#Stack",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/pages/experiments/base/use-host-element-name.tsx",
          "start": {
            "line": 85,
            "index": 4
          },
          "end": {
            "line": 182,
            "index": 12
          }
        },
        "propsValues": {
          "spacing": 8,
          "direction": "column"
        },
        "snippet": "<Stack spacing={8} direction=\"column\" style={{ padding: 16 }}>\n      <Stack spacing={3} sx={{ mb: 24 }}>\n        <pre style={{ fontSize: 16, fontWeight: 500, marginBottom: -12 }}>Normal cases:</pre>\n        <pre style={{ lineHeight: 1.8, marginBottom: 12 }}>\n          1A: defaults\n          <br />\n          1B: `slots.root` is a `span`, rootElementName is inferred\n          <br />\n          1C & 1D: `slots.root` is a styled component, rootElementName is manually passed\n        </pre>\n        <Stack spacing={2} direction=\"row\" style={{ marginBottom: 48 }}>\n          <StyledBaseButton disabled>Button 1A</StyledBaseButton>\n\n          <StyledBaseButton disabled slots={{ root: 'span' }}>\n            Button 1B\n          </StyledBaseButton>\n\n          <BaseButton disabled slots={{ root: StyledHtmlButton }} rootElementName=\"button\">\n            Button 1C\n          </BaseButton>\n\n          <StyledBaseButton\n            disabled\n            rootElementName=\"input\"\n            slots={{ root: StyledHtmlInput }}\n            value=\"Button 1D\"\n            type=\"button\"\n          />\n        </Stack>\n\n        <pre style={{ fontSize: 16, fontWeight: 500, marginBottom: -12 }}>\n          Cases where the runtime warning is triggered:\n        </pre>\n        <pre style={{ lineHeight: 1.8, marginBottom: 12 }}>\n          2A: rendering default element, rootElementName is given an incorrect value of `span`\n          <br />\n          2B: rendering a styled component that returns the default `button` element,\n          rootElementName is given an incorrect value of `span`\n          <br />\n          2C: rendering a styled component that returns the non-default `input` element,\n          rootElementName is not passed\n        </pre>\n        <Stack spacing={2} direction=\"row\" style={{ marginBottom: 48 }}>\n          <StyledBaseButton disabled rootElementName=\"span\">\n            Button 2A\n          </StyledBaseButton>\n\n          <BaseButton disabled rootElementName=\"span\" slots={{ root: StyledHtmlButton }}>\n            Button 2B\n          </BaseButton>\n\n          <StyledBaseButton\n            disabled\n            slots={{ root: StyledHtmlInput }}\n            value=\"Button 2C\"\n            type=\"button\"\n          />\n        </Stack>\n\n        <pre style={{ fontSize: 16, fontWeight: 500, marginBottom: -12 }}>Links:</pre>\n        <pre style={{ lineHeight: 1.8, marginBottom: 12 }}>\n          3A, 3B, 3C: As long as `href` or `to` are passed, and all involved components only render\n          `a` tags, rootElementName will be inferred automatically\n          <br />\n          3D: `slots.root` is a styled `input`, but an `a` is expected because `href` is passed so\n          the warning is triggered\n          <br />\n          3E: Achieves the same as 3D but circumvents the warning, even though this results in\n          invalid HTML\n        </pre>\n        <Stack spacing={2} direction=\"row\">\n          <StyledBaseButton disabled href=\"https://mui.com/\">\n            Link-3A\n          </StyledBaseButton>\n          <StyledBaseButton disabled href=\"https://mui.com/\" slots={{ root: LinkSlot }}>\n            Link-3B (Next.js Link)\n          </StyledBaseButton>\n          <StyledBaseButton disabled href=\"https://mui.com/\" slots={{ root: StyledHtmlAnchor }}>\n            Link-3C\n          </StyledBaseButton>\n          <BaseButton\n            disabled\n            href=\"https://mui.com/\"\n            slots={{ root: StyledHtmlInput }}\n            value=\"Link 3D\"\n            type=\"button\"\n            rootElementName=\"input\"\n          />\n          <StyledBaseButton\n            disabled\n            href=\"https://mui.com/\"\n            slots={{ root: 'input' }}\n            value=\"Link 3E\"\n            type=\"button\"\n          />\n        </Stack>\n      </Stack>\n    </Stack>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Typography": [
      {
        "componentId": "@mui/material#Typography",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "test/regressions/fixtures/AppBar/AppBarColorTransparent.js",
          "start": {
            "line": 15,
            "index": 8
          },
          "end": {
            "line": 15,
            "index": 48
          }
        },
        "propsValues": {},
        "snippet": "<Typography>Light | Default</Typography>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Chip": [
      {
        "componentId": "@mui/material#Chip",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/getting-started/templates/landing-page/components/Features.tsx",
          "start": {
            "line": 98,
            "index": 14
          },
          "end": {
            "line": 103,
            "index": 16
          }
        },
        "propsValues": {},
        "snippet": "<Chip\n                key={index}\n                label={title}\n                onClick={() => handleItemClick(index)}\n                selected={selectedItemIndex === index}\n              />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/ClickAwayListener#ClickAwayListener": [
      {
        "componentId": "@mui/material/ClickAwayListener#ClickAwayListener",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/src/modules/components/AppNavDrawer.js",
          "start": {
            "line": 121,
            "index": 14
          },
          "end": {
            "line": 128,
            "index": 34
          }
        },
        "propsValues": {},
        "snippet": "<ClickAwayListener onClickAway={handleClose}>\n                <MuiProductSelector\n                  autoFocusItem={open}\n                  id=\"mui-product-menu\"\n                  aria-labelledby=\"mui-product-selector\"\n                  onKeyDown={handleListKeyDown}\n                />\n              </ClickAwayListener>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/NoSsr#NoSsr": [
      {
        "componentId": "@mui/material/NoSsr#NoSsr",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/pages/index.tsx",
          "start": {
            "line": 46,
            "index": 6
          },
          "end": {
            "line": 48,
            "index": 14
          }
        },
        "propsValues": {},
        "snippet": "<NoSsr>\n        <NewsletterToast />\n      </NoSsr>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Portal#Portal": [
      {
        "componentId": "@mui/material/Portal#Portal",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/src/modules/components/AdGuest.js",
          "start": {
            "line": 15,
            "index": 4
          },
          "end": {
            "line": 29,
            "index": 13
          }
        },
        "propsValues": {},
        "snippet": "<Portal\n      container={() => {\n        const element = document.querySelector(classSelector);\n\n        if (ad.element === element) {\n          element.classList.add('ad');\n        } else {\n          element.classList.remove('ad');\n        }\n\n        return ad.element;\n      }}\n    >\n      {children}\n    </Portal>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/TextareaAutosize#TextareaAutosize": [
      {
        "componentId": "@mui/material/TextareaAutosize#TextareaAutosize",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/components/textarea-autosize/MinHeightTextarea.tsx",
          "start": {
            "line": 6,
            "index": 4
          },
          "end": {
            "line": 11,
            "index": 6
          }
        },
        "propsValues": {
          "aria-label": "minimum height",
          "minRows": 3,
          "placeholder": "Minimum 3 rows"
        },
        "snippet": "<TextareaAutosize\n      aria-label=\"minimum height\"\n      minRows={3}\n      placeholder=\"Minimum 3 rows\"\n      style={{ width: 200 }}\n    />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Accordion": [
      {
        "componentId": "@mui/material#Accordion",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/deprecations/accordion-props/test-cases/expected.js",
          "start": {
            "line": 4,
            "index": 0
          },
          "end": {
            "line": 8,
            "index": 5
          }
        },
        "propsValues": {},
        "snippet": "<Accordion slots={{\n  transition: CustomTransition\n}} slotProps={{\n  transition: { unmountOnExit: true }\n}} />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#AccordionDetails": [
      {
        "componentId": "@mui/material#AccordionDetails",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/components/masonry/MasonryWithVariableHeightItems.tsx",
          "start": {
            "line": 34,
            "index": 14
          },
          "end": {
            "line": 34,
            "index": 59
          }
        },
        "propsValues": {},
        "snippet": "<AccordionDetails>Contents</AccordionDetails>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#AccordionSummary": [
      {
        "componentId": "@mui/material#AccordionSummary",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/components/masonry/MasonryWithVariableHeightItems.tsx",
          "start": {
            "line": 31,
            "index": 14
          },
          "end": {
            "line": 33,
            "index": 33
          }
        },
        "propsValues": {},
        "snippet": "<AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography>Accordion {index + 1}</Typography>\n              </AccordionSummary>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Autocomplete": [
      {
        "componentId": "@mui/material#Autocomplete",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/deprecations/autocomplete-props/test-cases/expected.js",
          "start": {
            "line": 4,
            "index": 0
          },
          "end": {
            "line": 17,
            "index": 7
          }
        },
        "propsValues": {},
        "snippet": "<Autocomplete\n  slots={{\n    paper: CustomPaper,\n    popper: CustomPopper,\n    listbox: CustomListbox\n  }}\n  slotProps={{\n    listbox: { height: 12 },\n    chip: { height: 10 },\n    clearIndicator: { width: 10 },\n    paper: { width: 12 },\n    popper: { width: 14 },\n    popupIndicator: { width: 16 }\n  }} />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Avatar": [
      {
        "componentId": "@mui/material#Avatar",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/deprecations/avatar-props/test-cases/expected.js",
          "start": {
            "line": 4,
            "index": 0
          },
          "end": {
            "line": 11,
            "index": 2
          }
        },
        "propsValues": {},
        "snippet": "<Avatar\n  slotProps={{\n    img: {\n      onError: () => {},\n      onLoad: () => {},\n    }\n  }}\n/>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#AvatarGroup": [
      {
        "componentId": "@mui/material#AvatarGroup",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/deprecations/avatar-group-props/test-cases/expected.js",
          "start": {
            "line": 4,
            "index": 0
          },
          "end": {
            "line": 8,
            "index": 2
          }
        },
        "propsValues": {},
        "snippet": "<AvatarGroup\n  slotProps={{\n    surplus: {color: \"red\"},\n  }}\n/>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Badge": [
      {
        "componentId": "@mui/material#Badge",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/deprecations/badge-props/test-cases/expected.js",
          "start": {
            "line": 3,
            "index": 0
          },
          "end": {
            "line": 5,
            "index": 47
          }
        },
        "propsValues": {},
        "snippet": "<Badge slots={{\n  root: ComponentsRoot\n}} slotProps={{ root: componentsRootProps }} />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Box": [
      {
        "componentId": "@mui/material#Box",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "test/regressions/fixtures/Alert/HorizontalOverflow.js",
          "start": {
            "line": 9,
            "index": 4
          },
          "end": {
            "line": 19,
            "index": 10
          }
        },
        "propsValues": {},
        "snippet": "<Box sx={{ width: 500 }}>\n      <Alert\n        action={\n          <Button color=\"inherit\" size=\"small\">\n            UNDO\n          </Button>\n        }\n      >\n        <Typography as=\"div\">{'a'.repeat(500)}</Typography>\n      </Alert>\n    </Box>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Button": [
      {
        "componentId": "@mui/material#Button",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "examples/material-ui-cra-tailwind-ts/src/PopoverMenu.tsx",
          "start": {
            "line": 16,
            "index": 6
          },
          "end": {
            "line": 24,
            "index": 15
          }
        },
        "propsValues": {
          "id": "basic-button",
          "aria-haspopup": "true"
        },
        "snippet": "<Button\n        id=\"basic-button\"\n        aria-controls={open ? 'basic-menu' : undefined}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? 'true' : undefined}\n        onClick={handleClick}\n      >\n        Popover Menu\n      </Button>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#CardActions": [
      {
        "componentId": "@mui/material#CardActions",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/components/cards/MultiActionAreaCard.tsx",
          "start": {
            "line": 28,
            "index": 6
          },
          "end": {
            "line": 32,
            "index": 20
          }
        },
        "propsValues": {},
        "snippet": "<CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n      </CardActions>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Container#Container": [
      {
        "componentId": "@mui/material/Container#Container",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "examples/material-ui-express-ssr/App.js",
          "start": {
            "line": 29,
            "index": 4
          },
          "end": {
            "line": 37,
            "index": 16
          }
        },
        "propsValues": {
          "maxWidth": "sm"
        },
        "snippet": "<Container maxWidth=\"sm\">\n      <Box sx={{ my: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" sx={{ mb: 2 }}>\n          Material UI Express.js server-rendered example\n        </Typography>\n        <ProTip />\n        <Copyright />\n      </Box>\n    </Container>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Divider": [
      {
        "componentId": "@mui/material#Divider",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/src/modules/components/ApiPage/list/ExpandableApiItem.tsx",
          "start": {
            "line": 219,
            "index": 6
          },
          "end": {
            "line": 219,
            "index": 17
          }
        },
        "propsValues": {},
        "snippet": "<Divider />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#FormControl": [
      {
        "componentId": "@mui/material#FormControl",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/v5.0.0/variant-prop.test/expected.js",
          "start": {
            "line": 23,
            "index": 6
          },
          "end": {
            "line": 23,
            "index": 51
          }
        },
        "propsValues": {
          "variant": "standard"
        },
        "snippet": "<FormControl variant=\"standard\" {...props} />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Grid": [
      {
        "componentId": "@mui/material#Grid",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/deprecations/grid-props/test-cases/expected.js",
          "start": {
            "line": 4,
            "index": 0
          },
          "end": {
            "line": 4,
            "index": 32
          }
        },
        "propsValues": {
          "flexWrap": "wrap-reverse"
        },
        "snippet": "<Grid flexWrap=\"wrap-reverse\" />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#IconButton": [
      {
        "componentId": "@mui/material#IconButton",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/src/modules/components/ApiPage/list/ExpandableApiItem.tsx",
          "start": {
            "line": 203,
            "index": 10
          },
          "end": {
            "line": 215,
            "index": 23
          }
        },
        "propsValues": {
          "className": "MuiApi-expend-button",
          "size": "small"
        },
        "snippet": "<IconButton\n            onClick={() => setIsExtended((prev) => !prev)}\n            className=\"MuiApi-expend-button\"\n            aria-label={isExtended ? 'Collapse' : 'Expand'}\n            size=\"small\"\n            sx={{ p: 0, ml: 'auto', borderRadius: '6px' }}\n          >\n            {isExtended ? (\n              <KeyboardArrowUpIcon sx={{ color: 'grey.500' }} />\n            ) : (\n              <KeyboardArrowDownIcon sx={{ color: 'grey.500' }} />\n            )}\n          </IconButton>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Link": [
      {
        "componentId": "@mui/material#Link",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/v5.0.0/link-underline-hover.test/expected.js",
          "start": {
            "line": 6,
            "index": 2
          },
          "end": {
            "line": 6,
            "index": 10
          }
        },
        "propsValues": {},
        "snippet": "<Link />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Menu": [
      {
        "componentId": "@mui/material#Menu",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "examples/material-ui-cra-tailwind-ts/src/PopoverMenu.tsx",
          "start": {
            "line": 25,
            "index": 6
          },
          "end": {
            "line": 40,
            "index": 13
          }
        },
        "propsValues": {
          "id": "basic-menu"
        },
        "snippet": "<Menu\n        id=\"basic-menu\"\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        MenuListProps={{\n          'aria-labelledby': 'basic-button',\n        }}\n      >\n        <MenuItem onClick={handleClose} className=\"py-2\">\n          Small Item\n        </MenuItem>\n        <MenuItem onClick={handleClose} className=\"py-8\">\n          Large Item\n        </MenuItem>\n      </Menu>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/MenuList#MenuList": [
      {
        "componentId": "@mui/material/MenuList#MenuList",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "test/regressions/fixtures/Menu/SimpleMenuList.js",
          "start": {
            "line": 9,
            "index": 6
          },
          "end": {
            "line": 13,
            "index": 17
          }
        },
        "propsValues": {},
        "snippet": "<MenuList>\n        <MenuItem>Profile</MenuItem>\n        <MenuItem selected>My Account</MenuItem>\n        <MenuItem>Logout</MenuItem>\n      </MenuList>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Modal#Modal": [
      {
        "componentId": "@mui/material/Modal#Modal",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/components/modal/TransitionsModal.tsx",
          "start": {
            "line": 29,
            "index": 6
          },
          "end": {
            "line": 52,
            "index": 14
          }
        },
        "propsValues": {
          "aria-labelledby": "transition-modal-title",
          "aria-describedby": "transition-modal-description",
          "closeAfterTransition": true
        },
        "snippet": "<Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        slots={{ backdrop: Backdrop }}\n        slotProps={{\n          backdrop: {\n            timeout: 500,\n          },\n        }}\n      >\n        <Fade in={open}>\n          <Box sx={style}>\n            <Typography id=\"transition-modal-title\" variant=\"h6\" component=\"h2\">\n              Text in a modal\n            </Typography>\n            <Typography id=\"transition-modal-description\" sx={{ mt: 2 }}>\n              Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n            </Typography>\n          </Box>\n        </Fade>\n      </Modal>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/SvgIcon#SvgIcon": [
      {
        "componentId": "@mui/material/SvgIcon#SvgIcon",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "examples/material-ui-express-ssr/ProTip.js",
          "start": {
            "line": 8,
            "index": 4
          },
          "end": {
            "line": 10,
            "index": 14
          }
        },
        "propsValues": {},
        "snippet": "<SvgIcon {...props}>\n      <path d=\"M9 21c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-1H9v1zm3-19C8.14 2 5 5.14 5 9c0 2.38 1.19 4.47 3 5.74V17c0 .55.45 1 1 1h6c.55 0 1-.45 1-1v-2.26c1.81-1.27 3-3.36 3-5.74 0-3.86-3.14-7-7-7zm2.85 11.1l-.85.6V16h-4v-2.3l-.85-.6C7.8 12.16 7 10.63 7 9c0-2.76 2.24-5 5-5s5 2.24 5 5c0 1.63-.8 3.16-2.15 4.1z\" />\n    </SvgIcon>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#AppBar": [
      {
        "componentId": "@mui/material#AppBar",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "test/regressions/fixtures/AppBar/AppBarColorTransparent.js",
          "start": {
            "line": 14,
            "index": 6
          },
          "end": {
            "line": 16,
            "index": 15
          }
        },
        "propsValues": {
          "position": "static"
        },
        "snippet": "<AppBar position=\"static\">\n        <Typography>Light | Default</Typography>\n      </AppBar>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#Backdrop": [
      {
        "componentId": "@mui/material#Backdrop",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/deprecations/backdrop-props/test-cases/expected.js",
          "start": {
            "line": 4,
            "index": 0
          },
          "end": {
            "line": 6,
            "index": 5
          }
        },
        "propsValues": {},
        "snippet": "<Backdrop slots={{\n  transition: CustomTransition\n}} />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#CardActionArea": [
      {
        "componentId": "@mui/material#CardActionArea",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/components/cards/MultiActionAreaCard.tsx",
          "start": {
            "line": 11,
            "index": 6
          },
          "end": {
            "line": 27,
            "index": 23
          }
        },
        "propsValues": {},
        "snippet": "<CardActionArea>\n        <CardMedia\n          component=\"img\"\n          height=\"140\"\n          image=\"/static/images/cards/contemplative-reptile.jpg\"\n          alt=\"green iguana\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\n            Lizard\n          </Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n            Lizards are a widespread group of squamate reptiles, with over 6,000\n            species, ranging across all continents except Antarctica\n          </Typography>\n        </CardContent>\n      </CardActionArea>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/CssBaseline#CssBaseline": [
      {
        "componentId": "@mui/material/CssBaseline#CssBaseline",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "examples/material-ui-express-ssr/server.js",
          "start": {
            "line": 46,
            "index": 8
          },
          "end": {
            "line": 46,
            "index": 23
          }
        },
        "propsValues": {},
        "snippet": "<CssBaseline />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Fade#Fade": [
      {
        "componentId": "@mui/material/Fade#Fade",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/src/modules/components/DemoToolbar.js",
          "start": {
            "line": 484,
            "index": 8
          },
          "end": {
            "line": 520,
            "index": 15
          }
        },
        "propsValues": {},
        "snippet": "<Fade in={codeOpen}>\n          <Box sx={{ display: 'flex' }}>\n            {hasNonSystemDemos && (\n              <Divider orientation=\"vertical\" variant=\"middle\" sx={{ mx: 1, height: '24px' }} />\n            )}\n            <ToggleButtonGroup\n              sx={{ margin: '8px 0' }}\n              exclusive\n              value={renderedCodeVariant()}\n              onChange={handleCodeLanguageClick}\n            >\n              <ToggleButton\n                value={CODE_VARIANTS.JS}\n                aria-label={t('showJSSource')}\n                data-ga-event-category=\"demo\"\n                data-ga-event-action=\"source-js\"\n                data-ga-event-label={demo.gaLabel}\n                {...getControlProps(1)}\n                // eslint-disable-next-line material-ui/no-hardcoded-labels\n              >\n                JS\n              </ToggleButton>\n              <ToggleButton\n                value={CODE_VARIANTS.TS}\n                disabled={!hasTSVariant}\n                aria-label={t('showTSSource')}\n                data-ga-event-category=\"demo\"\n                data-ga-event-action=\"source-ts\"\n                data-ga-event-label={demo.gaLabel}\n                {...getControlProps(2)}\n                // eslint-disable-next-line material-ui/no-hardcoded-labels\n              >\n                TS\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </Box>\n        </Fade>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/GlobalStyles#GlobalStyles": [
      {
        "componentId": "@mui/material/GlobalStyles#GlobalStyles",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "test/regressions/TestViewer.js",
          "start": {
            "line": 54,
            "index": 6
          },
          "end": {
            "line": 73,
            "index": 8
          }
        },
        "propsValues": {},
        "snippet": "<GlobalStyles\n        styles={{\n          html: {\n            WebkitFontSmoothing: 'antialiased', // Antialiasing.\n            MozOsxFontSmoothing: 'grayscale', // Antialiasing.\n            // Do the opposite of the docs in order to help catching issues.\n            boxSizing: 'content-box',\n          },\n          '*, *::before, *::after': {\n            boxSizing: 'inherit',\n            // Disable transitions to avoid flaky screenshots\n            transition: 'none !important',\n            animation: 'none !important',\n          },\n          body: {\n            margin: 0,\n            overflowX: 'hidden',\n          },\n        }}\n      />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Grow#Grow": [
      {
        "componentId": "@mui/material/Grow#Grow",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/src/modules/components/Notifications.js",
          "start": {
            "line": 216,
            "index": 12
          },
          "end": {
            "line": 264,
            "index": 19
          }
        },
        "propsValues": {},
        "snippet": "<Grow in={open} {...TransitionProps}>\n              <Paper\n                sx={(theme) => ({\n                  mt: 0.5,\n                  border: '1px solid',\n                  borderColor: 'grey.200',\n                  boxShadow: `0px 4px 20px rgba(170, 180, 190, 0.3)`,\n                  ...theme.applyDarkStyles({\n                    borderColor: 'primaryDark.700',\n                    boxShadow: `0px 4px 20px rgba(0, 0, 0, 0.5)`,\n                  }),\n                })}\n              >\n                <List>\n                  {messageList ? (\n                    messageList.map((message, index) => (\n                      <React.Fragment key={message.id}>\n                        <ListItem alignItems=\"flex-start\">\n                          <Typography gutterBottom>\n                            <b>{message.title}</b>\n                          </Typography>\n                          <Typography gutterBottom variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                            <span\n                              id=\"notification-message\"\n                              // eslint-disable-next-line react/no-danger\n                              dangerouslySetInnerHTML={{ __html: message.text }}\n                            />\n                          </Typography>\n                          {message.date && (\n                            <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n                              {new Date(message.date).toLocaleDateString('en-US', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: 'numeric',\n                              })}\n                            </Typography>\n                          )}\n                        </ListItem>\n                        {index < messageList.length - 1 ? <Divider /> : null}\n                      </React.Fragment>\n                    ))\n                  ) : (\n                    <Loading>\n                      <CircularProgress size={32} />\n                    </Loading>\n                  )}\n                </List>\n              </Paper>\n            </Grow>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#MenuItem": [
      {
        "componentId": "@mui/material#MenuItem",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "examples/material-ui-cra-tailwind-ts/src/PopoverMenu.tsx",
          "start": {
            "line": 34,
            "index": 8
          },
          "end": {
            "line": 36,
            "index": 19
          }
        },
        "propsValues": {
          "className": "py-2"
        },
        "snippet": "<MenuItem onClick={handleClose} className=\"py-2\">\n          Small Item\n        </MenuItem>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Popper#Popper": [
      {
        "componentId": "@mui/material/Popper#Popper",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/src/modules/components/Notifications.js",
          "start": {
            "line": 201,
            "index": 6
          },
          "end": {
            "line": 267,
            "index": 15
          }
        },
        "propsValues": {
          "id": "notifications-popup",
          "placement": "bottom-end",
          "transition": true,
          "disablePortal": true
        },
        "snippet": "<Popper\n        id=\"notifications-popup\"\n        anchorEl={anchorRef.current}\n        open={open}\n        placement=\"bottom-end\"\n        transition\n        disablePortal\n        role={undefined}\n      >\n        {({ TransitionProps }) => (\n          <ClickAwayListener\n            onClickAway={() => {\n              setOpen(false);\n            }}\n          >\n            <Grow in={open} {...TransitionProps}>\n              <Paper\n                sx={(theme) => ({\n                  mt: 0.5,\n                  border: '1px solid',\n                  borderColor: 'grey.200',\n                  boxShadow: `0px 4px 20px rgba(170, 180, 190, 0.3)`,\n                  ...theme.applyDarkStyles({\n                    borderColor: 'primaryDark.700',\n                    boxShadow: `0px 4px 20px rgba(0, 0, 0, 0.5)`,\n                  }),\n                })}\n              >\n                <List>\n                  {messageList ? (\n                    messageList.map((message, index) => (\n                      <React.Fragment key={message.id}>\n                        <ListItem alignItems=\"flex-start\">\n                          <Typography gutterBottom>\n                            <b>{message.title}</b>\n                          </Typography>\n                          <Typography gutterBottom variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                            <span\n                              id=\"notification-message\"\n                              // eslint-disable-next-line react/no-danger\n                              dangerouslySetInnerHTML={{ __html: message.text }}\n                            />\n                          </Typography>\n                          {message.date && (\n                            <Typography variant=\"caption\" sx={{ color: 'text.secondary' }}>\n                              {new Date(message.date).toLocaleDateString('en-US', {\n                                year: 'numeric',\n                                month: 'long',\n                                day: 'numeric',\n                              })}\n                            </Typography>\n                          )}\n                        </ListItem>\n                        {index < messageList.length - 1 ? <Divider /> : null}\n                      </React.Fragment>\n                    ))\n                  ) : (\n                    <Loading>\n                      <CircularProgress size={32} />\n                    </Loading>\n                  )}\n                </List>\n              </Paper>\n            </Grow>\n          </ClickAwayListener>\n        )}\n      </Popper>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Slide#Slide": [
      {
        "componentId": "@mui/material/Slide#Slide",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/src/components/home/NewsletterToast.tsx",
          "start": {
            "line": 31,
            "index": 4
          },
          "end": {
            "line": 65,
            "index": 12
          }
        },
        "propsValues": {
          "timeout": 400,
          "direction": "down"
        },
        "snippet": "<Slide in={!hidden} timeout={400} direction=\"down\">\n      <Box sx={{ position: 'fixed', zIndex: 1300, top: 80, left: 0, width: '100%' }}>\n        <Card\n          variant=\"outlined\"\n          role=\"alert\"\n          sx={(theme) => ({\n            p: 1,\n            position: 'absolute',\n            left: '50%',\n            transform: 'translate(-50%)',\n            opacity: hidden ? 0 : 1,\n            transition: '0.5s',\n            display: 'flex',\n            alignItems: 'center',\n            boxShadow: '0px 4px 20px rgba(61, 71, 82, 0.25)',\n            ...theme.applyDarkStyles({\n              boxShadow: '0px 4px 20px rgba(0, 0, 0, 0.6)',\n            }),\n          })}\n        >\n          <MarkEmailReadTwoTone color=\"success\" sx={{ mx: 0.5 }} />\n          <div>\n            <Typography\n              variant=\"body2\"\n              sx={{ color: 'text.secondary', fontWeight: 500, ml: 1, mr: 2 }}\n            >\n              You have subscribed to MUI newsletter.\n            </Typography>\n          </div>\n          <IconButton aria-hidden size=\"small\" onClick={() => setHidden(true)} aria-label=\"close\">\n            <CloseRounded fontSize=\"small\" />\n          </IconButton>\n        </Card>\n      </Box>\n    </Slide>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#SpeedDial": [
      {
        "componentId": "@mui/material#SpeedDial",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/deprecations/speed-dial-props/test-cases/expected.js",
          "start": {
            "line": 4,
            "index": 0
          },
          "end": {
            "line": 8,
            "index": 5
          }
        },
        "propsValues": {},
        "snippet": "<SpeedDial slots={{\n  transition: CustomTransition\n}} slotProps={{\n  transition: CustomTransitionProps\n}} />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#ThemeProvider": [
      {
        "componentId": "@mui/material#ThemeProvider",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/components/box/BoxSx.tsx",
          "start": {
            "line": 6,
            "index": 4
          },
          "end": {
            "line": 27,
            "index": 20
          }
        },
        "propsValues": {},
        "snippet": "<ThemeProvider\n      theme={{\n        palette: {\n          primary: {\n            main: '#007FFF',\n            dark: '#0066CC',\n          },\n        },\n      }}\n    >\n      <Box\n        sx={{\n          width: 100,\n          height: 100,\n          borderRadius: 1,\n          bgcolor: 'primary.main',\n          '&:hover': {\n            bgcolor: 'primary.dark',\n          },\n        }}\n      />\n    </ThemeProvider>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material#TextField": [
      {
        "componentId": "@mui/material#TextField",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/deprecations/text-field-props/test-cases/expected.js",
          "start": {
            "line": 4,
            "index": 0
          },
          "end": {
            "line": 11,
            "index": 7
          }
        },
        "propsValues": {},
        "snippet": "<TextField\n  slotProps={{\n    input: CustomInputProps,\n    htmlInput: CustomHtmlInputProps,\n    select: CustomSelectProps,\n    inputLabel: CustomInputLabelProps,\n    formHelperText: CustomFormHelperProps\n  }} />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Zoom#Zoom": [
      {
        "componentId": "@mui/material/Zoom#Zoom",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/components/transitions/SimpleZoom.tsx",
          "start": {
            "line": 38,
            "index": 8
          },
          "end": {
            "line": 38,
            "index": 40
          }
        },
        "propsValues": {},
        "snippet": "<Zoom in={checked}>{icon}</Zoom>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/styles#StyledEngineProvider": [
      {
        "componentId": "@mui/material/styles#StyledEngineProvider",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/v5.0.0/preset-safe.test/expected.js",
          "start": {
            "line": 193,
            "index": 8
          },
          "end": {
            "line": 197,
            "index": 31
          }
        },
        "propsValues": {
          "injectFirst": true
        },
        "snippet": "<StyledEngineProvider injectFirst>\n          <ThemeProvider theme={theme}>\n            <Component {...props} />\n          </ThemeProvider>\n        </StyledEngineProvider>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/InitColorSchemeScript#MuiInitColorSchemeScript": [
      {
        "componentId": "@mui/material/InitColorSchemeScript#MuiInitColorSchemeScript",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/pages/_document.js",
          "start": {
            "line": 191,
            "index": 10
          },
          "end": {
            "line": 191,
            "index": 59
          }
        },
        "propsValues": {
          "defaultMode": "system"
        },
        "snippet": "<MuiInitColorSchemeScript defaultMode=\"system\" />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Link#MuiLink": [
      {
        "componentId": "@mui/material/Link#MuiLink",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "examples/material-ui-preact/src/Copyright.js",
          "start": {
            "line": 15,
            "index": 6
          },
          "end": {
            "line": 17,
            "index": 16
          }
        },
        "propsValues": {
          "color": "inherit",
          "href": "https://mui.com/"
        },
        "snippet": "<MuiLink color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </MuiLink>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material-nextjs/v14-pagesRouter#DocumentHeadTags": [
      {
        "componentId": "@mui/material-nextjs/v14-pagesRouter#DocumentHeadTags",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "examples/material-ui-nextjs-pages-router-ts/pages/_document.tsx",
          "start": {
            "line": 18,
            "index": 8
          },
          "end": {
            "line": 18,
            "index": 39
          }
        },
        "propsValues": {},
        "snippet": "<DocumentHeadTags {...props} />",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material-nextjs/v14-pagesRouter#AppCacheProvider": [
      {
        "componentId": "@mui/material-nextjs/v14-pagesRouter#AppCacheProvider",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "examples/material-ui-nextjs-pages-router-ts/pages/_app.tsx",
          "start": {
            "line": 12,
            "index": 4
          },
          "end": {
            "line": 21,
            "index": 23
          }
        },
        "propsValues": {},
        "snippet": "<AppCacheProvider {...props}>\n      <Head>\n        <meta name=\"viewport\" content=\"initial-scale=1, width=device-width\" />\n      </Head>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...pageProps} />\n      </ThemeProvider>\n    </AppCacheProvider>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/SwipeableDrawer#SwipeableDrawer": [
      {
        "componentId": "@mui/material/SwipeableDrawer#SwipeableDrawer",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/src/modules/components/AppNavDrawer.js",
          "start": {
            "line": 464,
            "index": 10
          },
          "end": {
            "line": 478,
            "index": 28
          }
        },
        "propsValues": {
          "variant": "temporary"
        },
        "snippet": "<SwipeableDrawer\n            disableBackdropTransition={!iOS}\n            variant=\"temporary\"\n            open={mobileOpen}\n            onOpen={onOpen}\n            onClose={onClose}\n            ModalProps={{\n              keepMounted: true,\n            }}\n            PaperProps={{\n              component: AppNavPaperComponent,\n            }}\n          >\n            {drawer}\n          </SwipeableDrawer>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Unstable_TrapFocus#TrapFocus": [
      {
        "componentId": "@mui/material/Unstable_TrapFocus#TrapFocus",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "docs/data/material/components/dialogs/CookiesBanner.tsx",
          "start": {
            "line": 48,
            "index": 6
          },
          "end": {
            "line": 103,
            "index": 18
          }
        },
        "propsValues": {
          "open": true,
          "disableAutoFocus": true,
          "disableEnforceFocus": true
        },
        "snippet": "<TrapFocus open disableAutoFocus disableEnforceFocus>\n        <Fade appear={false} in={bannerOpen}>\n          <Paper\n            role=\"dialog\"\n            aria-modal=\"false\"\n            aria-label=\"Cookie banner\"\n            square\n            variant=\"outlined\"\n            tabIndex={-1}\n            sx={{\n              position: 'fixed',\n              bottom: 0,\n              left: 0,\n              right: 0,\n              m: 0,\n              p: 2,\n              borderWidth: 0,\n              borderTopWidth: 1,\n            }}\n          >\n            <Stack\n              direction={{ xs: 'column', sm: 'row' }}\n              sx={{ justifyContent: 'space-between', gap: 2 }}\n            >\n              <Box\n                sx={{ flexShrink: 1, alignSelf: { xs: 'flex-start', sm: 'center' } }}\n              >\n                <Typography sx={{ fontWeight: 'bold' }}>\n                  This website uses cookies\n                </Typography>\n                <Typography variant=\"body2\">\n                  example.com relies on cookies to improve your experience.\n                </Typography>\n              </Box>\n              <Stack\n                direction={{\n                  xs: 'row-reverse',\n                  sm: 'row',\n                }}\n                sx={{\n                  gap: 2,\n                  flexShrink: 0,\n                  alignSelf: { xs: 'flex-end', sm: 'center' },\n                }}\n              >\n                <Button size=\"small\" onClick={closeBanner} variant=\"contained\">\n                  Allow all\n                </Button>\n                <Button size=\"small\" onClick={closeBanner}>\n                  Reject all\n                </Button>\n              </Stack>\n            </Stack>\n          </Paper>\n        </Fade>\n      </TrapFocus>",
        "tags": [
          "external-lib"
        ]
      }
    ],
    "@mui/material/Stack#Stackkk": [
      {
        "componentId": "@mui/material/Stack#Stackkk",
        "source": {
          "type": "code-usage"
        },
        "location": {
          "path": "packages/mui-codemod/src/v6.0.0/system-props/test-cases/system-props.expected.js",
          "start": {
            "line": 72,
            "index": 0
          },
          "end": {
            "line": 75,
            "index": 44
          }
        },
        "propsValues": {},
        "snippet": "<Stackkk\n  sx={[{\n    flex: \"1\"\n  }, ...(Array.isArray(sx) ? sx : [sx])]} />",
        "tags": [
          "external-lib"
        ]
      }
    ]
  }
}